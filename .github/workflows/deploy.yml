name: Deploy Microservices

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      CLOUD_SERVER_HOST: ${{ secrets.CLOUD_SERVER_HOST }}
      CLOUD_SERVER_USER: ${{ secrets.CLOUD_SERVER_USER }}
      CLOUD_SERVER_SSH_KEY: ${{ secrets.CLOUD_SERVER_SSH_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      # ---------- Build & Push Services ----------
      - name: Build and push user-service
        uses: docker/build-push-action@v5
        with:
          context: ./user-service
          file: ./user-service/Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/user-service:${{ github.sha }}

      - name: Build and push auth-service
        uses: docker/build-push-action@v5
        with:
          context: ./auth-service
          file: ./auth-service/Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/auth-service:${{ github.sha }}

      - name: Build and push product-service
        uses: docker/build-push-action@v5
        with:
          context: ./product-service
          file: ./product-service/Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/product-service:${{ github.sha }}

      - name: Build and push category-service
        uses: docker/build-push-action@v5
        with:
          context: ./category-service
          file: ./category-service/Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/category-service:${{ github.sha }}

      - name: Build and push cart-service
        uses: docker/build-push-action@v5
        with:
          context: ./cart-service
          file: ./cart-service/Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/cart-service:${{ github.sha }}

      - name: Build and push order-service
        uses: docker/build-push-action@v5
        with:
          context: ./order-service
          file: ./order-service/Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/order-service:${{ github.sha }}

      - name: Build and push notification-service
        uses: docker/build-push-action@v5
        with:
          context: ./notification-service
          file: ./notification-service/Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/notification-service:${{ github.sha }}

      - name: Build and push lumora-api-gateway
        uses: docker/build-push-action@v5
        with:
          context: ./lumora-api-gateway
          file: ./lumora-api-gateway/Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/lumora-api-gateway:${{ github.sha }}

      # ---------- Deploy Step ----------
      - name: Deploy to Cloud Server via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.CLOUD_SERVER_HOST }}
          username: ${{ env.CLOUD_SERVER_USER }}
          key: ${{ env.CLOUD_SERVER_SSH_KEY }}
          script: |
            # Ensure docker and compose are available
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Please install Docker first."
              exit 1
            fi

            if ! docker compose version &> /dev/null; then
              echo "Docker Compose plugin not found. Please install it."
              exit 1
            fi

            # Update deployment repo
            if [ -d ~/deployment ]; then
              cd ~/deployment
              git fetch origin
              git reset --hard origin/main
            else
              git clone https://github.com/Lumora-Jewels/service-deployments.git ~/deployment
              cd ~/deployment
            fi

            export DOCKER_HUB_USERNAME=${{ env.DOCKER_HUB_USERNAME }}
            export GIT_COMMIT_SHA=${{ github.sha }}

            # Pull & restart services
            docker compose pull
            docker compose up -d --remove-orphans
            docker image prune -f

      - name: Deploy Kubernetes Manifests via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.CLOUD_SERVER_HOST }}
          username: ${{ env.CLOUD_SERVER_USER }}
          key: ${{ env.CLOUD_SERVER_SSH_KEY }}
          script: |
            cd ~/deployment
            kubectl apply -f k8s/
